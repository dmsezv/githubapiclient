//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class DefaultAPI {
    /**

     - parameter q: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func searchRepositoriesGet(q: String? = nil, completion: @escaping ((_ data: ReposModel?,_ error: Error?) -> Void)) {
        searchRepositoriesGetWithRequestBuilder(q: q).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - GET /search/repositories
     - Auto generated using Swagger Inspector
     - parameter q: (query)  (optional)
     - returns: RequestBuilder<ReposModel> 
     */
    open class func searchRepositoriesGetWithRequestBuilder(q: String? = nil) -> RequestBuilder<ReposModel> {
        let path = "/search/repositories"
        let URLString = GitHubApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "q": q?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<ReposModel>.Type = GitHubApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
